# Automatically generated by SST
import sst

# Define SST Program Options:
# (These reflect the settings from original run and are not necessary in all files)
sst.setProgramOption("verbose", "0")
sst.setProgramOption("stop-at", "0 ns")
sst.setProgramOption("print-timing-info", "false")
sst.setProgramOption("heartbeat-period", "")
sst.setProgramOption("timebase", "1 ps")
sst.setProgramOption("partitioner", "sst.single")
sst.setProgramOption("timeVortex", "sst.timevortex.priority_queue")
sst.setProgramOption("interthread-links", "false")
sst.setProgramOption("output-prefix-core", "@x SST Core: ")
# Define the global parameter sets:
sst.addGlobalParams("hr_router_1_params", {
    "flit_size" : "8B",
    "input_buf_size" : "16kB",
    "input_latency" : "20ns",
    "link_bw" : "12 GB/s",
    "num_vns" : "1",
    "output_buf_size" : "16kB",
    "output_latency" : "20ns",
    "xbar_arb" : "merlin.xbar_arb_lru",
    "xbar_bw" : "50GB/s",
})
sst.addGlobalParams("params_LinkControl_3", {
    "input_buf_size" : "16kB",
    "job_id" : "0",
    "job_size" : "2",
    "link_bw" : "12 GB/s",
    "output_buf_size" : "16kB",
    "use_nid_remap" : "False",
})
sst.addGlobalParams("params_LinkControl_9", {
    "input_buf_size" : "16kB",
    "job_id" : "-1",
    "job_size" : "30",
    "link_bw" : "1 GB/s",
    "output_buf_size" : "16kB",
    "use_nid_remap" : "False",
})

# Define the SST Components:
comp_router = sst.Component("router", "merlin.hr_router")
comp_router.addParams({
     "num_ports" : "32",
     "id" : "0"
})
comp_router.addGlobalParamSet("hr_router_1_params")
comp_router.setCoordinates(0, 0, 0)
link_id_00000000 = sst.Link("link_id_00000000")
comp_router.addLink(link_id_00000000, "port0", "20 ns")
link_id_00000001 = sst.Link("link_id_00000001")
comp_router.addLink(link_id_00000001, "port1", "20 ns")
link_id_00000002 = sst.Link("link_id_00000002")
comp_router.addLink(link_id_00000002, "port2", "20 ns")
link_id_00000003 = sst.Link("link_id_00000003")
comp_router.addLink(link_id_00000003, "port3", "20 ns")
link_id_00000004 = sst.Link("link_id_00000004")
comp_router.addLink(link_id_00000004, "port4", "20 ns")
link_id_00000005 = sst.Link("link_id_00000005")
comp_router.addLink(link_id_00000005, "port5", "20 ns")
link_id_00000006 = sst.Link("link_id_00000006")
comp_router.addLink(link_id_00000006, "port6", "20 ns")
link_id_00000007 = sst.Link("link_id_00000007")
comp_router.addLink(link_id_00000007, "port7", "20 ns")
link_id_00000008 = sst.Link("link_id_00000008")
comp_router.addLink(link_id_00000008, "port8", "20 ns")
link_id_00000009 = sst.Link("link_id_00000009")
comp_router.addLink(link_id_00000009, "port9", "20 ns")
link_id_0000000a = sst.Link("link_id_0000000a")
comp_router.addLink(link_id_0000000a, "port10", "20 ns")
link_id_0000000b = sst.Link("link_id_0000000b")
comp_router.addLink(link_id_0000000b, "port11", "20 ns")
link_id_0000000c = sst.Link("link_id_0000000c")
comp_router.addLink(link_id_0000000c, "port12", "20 ns")
link_id_0000000d = sst.Link("link_id_0000000d")
comp_router.addLink(link_id_0000000d, "port13", "20 ns")
link_id_0000000e = sst.Link("link_id_0000000e")
comp_router.addLink(link_id_0000000e, "port14", "20 ns")
link_id_0000000f = sst.Link("link_id_0000000f")
comp_router.addLink(link_id_0000000f, "port15", "20 ns")
link_id_00000010 = sst.Link("link_id_00000010")
comp_router.addLink(link_id_00000010, "port16", "20 ns")
link_id_00000011 = sst.Link("link_id_00000011")
comp_router.addLink(link_id_00000011, "port17", "20 ns")
link_id_00000012 = sst.Link("link_id_00000012")
comp_router.addLink(link_id_00000012, "port18", "20 ns")
link_id_00000013 = sst.Link("link_id_00000013")
comp_router.addLink(link_id_00000013, "port19", "20 ns")
link_id_00000014 = sst.Link("link_id_00000014")
comp_router.addLink(link_id_00000014, "port20", "20 ns")
link_id_00000015 = sst.Link("link_id_00000015")
comp_router.addLink(link_id_00000015, "port21", "20 ns")
link_id_00000016 = sst.Link("link_id_00000016")
comp_router.addLink(link_id_00000016, "port22", "20 ns")
link_id_00000017 = sst.Link("link_id_00000017")
comp_router.addLink(link_id_00000017, "port23", "20 ns")
link_id_00000018 = sst.Link("link_id_00000018")
comp_router.addLink(link_id_00000018, "port24", "20 ns")
link_id_00000019 = sst.Link("link_id_00000019")
comp_router.addLink(link_id_00000019, "port25", "20 ns")
link_id_0000001a = sst.Link("link_id_0000001a")
comp_router.addLink(link_id_0000001a, "port26", "20 ns")
link_id_0000001b = sst.Link("link_id_0000001b")
comp_router.addLink(link_id_0000001b, "port27", "20 ns")
link_id_0000001c = sst.Link("link_id_0000001c")
comp_router.addLink(link_id_0000001c, "port28", "20 ns")
link_id_0000001d = sst.Link("link_id_0000001d")
comp_router.addLink(link_id_0000001d, "port29", "20 ns")
link_id_0000001e = sst.Link("link_id_0000001e")
comp_router.addLink(link_id_0000001e, "port30", "20 ns")
link_id_0000001f = sst.Link("link_id_0000001f")
comp_router.addLink(link_id_0000001f, "port31", "20 ns")
comp_router_subcomp_topology = comp_router.setSubComponent("topology", "merlin.singlerouter", 0)
comp_router_subcomp_topology.addParams({
     "num_ports" : "32"
})
comp_router_subcomp_topology.setCoordinates(0, 0, 0)

comp_node0 = sst.Component("node0", "hg.node")
comp_node0.setCoordinates(0, 0, 0)
comp_node0_subcomp_os_slot = comp_node0.setSubComponent("os_slot", "hg.operating_system", 0)
comp_node0_subcomp_os_slot.setCoordinates(0, 0, 0)
comp_node0_subcomp_os_slot.addParams({
    "verbose"   : "0",
    "app1.name" : "runsendrecv",
    "app1.exe"  : "runsendrecv" })
comp_node0_subcomp_os_slot.addParams({"app1.apis" : ["systemAPI:libsystemapi.so", "SimTransport:libsumi.so", "MpiApi:libsst_mpi.so"] })
comp_node0_subcomp_nic_slot = comp_node0.setSubComponent("nic_slot", "hg.nic", 0)
comp_node0_subcomp_nic_slot.setCoordinates(0, 0, 0)
comp_node0_subcomp_link_control_slot = comp_node0.setSubComponent("link_control_slot", "merlin.linkcontrol", 0)
comp_node0_subcomp_link_control_slot.addParams({
     "logical_nid" : "0"
})
comp_node0_subcomp_link_control_slot.addGlobalParamSet("params_LinkControl_3")
comp_node0_subcomp_link_control_slot.setCoordinates(0, 0, 0)
comp_node0_subcomp_link_control_slot.addLink(link_id_00000000, "rtr_port", "20 ns")

comp_node1 = sst.Component("node1", "hg.node")
comp_node1.setCoordinates(0, 0, 0)
comp_node1_subcomp_os_slot = comp_node1.setSubComponent("os_slot", "hg.operating_system", 0)
comp_node1_subcomp_os_slot.setCoordinates(0, 0, 0)
comp_node1_subcomp_os_slot.addParams({
    "verbose"   : "0",
    "app1.name" : "runsendrecv",
    "app1.exe"  : "runsendrecv" })
comp_node1_subcomp_os_slot.addParams({ "app1.apis" : ["systemAPI:libsystemapi.so", "SimTransport:libsumi.so", "MpiApi:libsst_mpi.so"] })
comp_node1_subcomp_nic_slot = comp_node1.setSubComponent("nic_slot", "hg.nic", 0)
comp_node1_subcomp_nic_slot.setCoordinates(0, 0, 0)
comp_node1_subcomp_link_control_slot = comp_node1.setSubComponent("link_control_slot", "merlin.linkcontrol", 0)
comp_node1_subcomp_link_control_slot.addParams({
     "logical_nid" : "0"
})
comp_node1_subcomp_link_control_slot.addGlobalParamSet("params_LinkControl_3")
comp_node1_subcomp_link_control_slot.setCoordinates(0, 0, 0)
comp_node1_subcomp_link_control_slot.addLink(link_id_00000001, "rtr_port", "20 ns")

comp_empty_node_2 = sst.Component("empty_node_2", "merlin.simple_patterns.empty")
comp_empty_node_2.setCoordinates(0, 0, 0)
comp_empty_node_2_subcomp_networkIF = comp_empty_node_2.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_2_subcomp_networkIF.addParams({
     "logical_nid" : "0"
})
comp_empty_node_2_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_2_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_2_subcomp_networkIF.addLink(link_id_00000002, "rtr_port", "20 ns")

comp_empty_node_3 = sst.Component("empty_node_3", "merlin.simple_patterns.empty")
comp_empty_node_3.setCoordinates(0, 0, 0)
comp_empty_node_3_subcomp_networkIF = comp_empty_node_3.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_3_subcomp_networkIF.addParams({
     "logical_nid" : "1"
})
comp_empty_node_3_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_3_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_3_subcomp_networkIF.addLink(link_id_00000003, "rtr_port", "20 ns")

comp_empty_node_4 = sst.Component("empty_node_4", "merlin.simple_patterns.empty")
comp_empty_node_4.setCoordinates(0, 0, 0)
comp_empty_node_4_subcomp_networkIF = comp_empty_node_4.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_4_subcomp_networkIF.addParams({
     "logical_nid" : "2"
})
comp_empty_node_4_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_4_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_4_subcomp_networkIF.addLink(link_id_00000004, "rtr_port", "20 ns")

comp_empty_node_5 = sst.Component("empty_node_5", "merlin.simple_patterns.empty")
comp_empty_node_5.setCoordinates(0, 0, 0)
comp_empty_node_5_subcomp_networkIF = comp_empty_node_5.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_5_subcomp_networkIF.addParams({
     "logical_nid" : "3"
})
comp_empty_node_5_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_5_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_5_subcomp_networkIF.addLink(link_id_00000005, "rtr_port", "20 ns")

comp_empty_node_6 = sst.Component("empty_node_6", "merlin.simple_patterns.empty")
comp_empty_node_6.setCoordinates(0, 0, 0)
comp_empty_node_6_subcomp_networkIF = comp_empty_node_6.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_6_subcomp_networkIF.addParams({
     "logical_nid" : "4"
})
comp_empty_node_6_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_6_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_6_subcomp_networkIF.addLink(link_id_00000006, "rtr_port", "20 ns")

comp_empty_node_7 = sst.Component("empty_node_7", "merlin.simple_patterns.empty")
comp_empty_node_7.setCoordinates(0, 0, 0)
comp_empty_node_7_subcomp_networkIF = comp_empty_node_7.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_7_subcomp_networkIF.addParams({
     "logical_nid" : "5"
})
comp_empty_node_7_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_7_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_7_subcomp_networkIF.addLink(link_id_00000007, "rtr_port", "20 ns")

comp_empty_node_8 = sst.Component("empty_node_8", "merlin.simple_patterns.empty")
comp_empty_node_8.setCoordinates(0, 0, 0)
comp_empty_node_8_subcomp_networkIF = comp_empty_node_8.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_8_subcomp_networkIF.addParams({
     "logical_nid" : "6"
})
comp_empty_node_8_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_8_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_8_subcomp_networkIF.addLink(link_id_00000008, "rtr_port", "20 ns")

comp_empty_node_9 = sst.Component("empty_node_9", "merlin.simple_patterns.empty")
comp_empty_node_9.setCoordinates(0, 0, 0)
comp_empty_node_9_subcomp_networkIF = comp_empty_node_9.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_9_subcomp_networkIF.addParams({
     "logical_nid" : "7"
})
comp_empty_node_9_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_9_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_9_subcomp_networkIF.addLink(link_id_00000009, "rtr_port", "20 ns")

comp_empty_node_10 = sst.Component("empty_node_10", "merlin.simple_patterns.empty")
comp_empty_node_10.setCoordinates(0, 0, 0)
comp_empty_node_10_subcomp_networkIF = comp_empty_node_10.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_10_subcomp_networkIF.addParams({
     "logical_nid" : "8"
})
comp_empty_node_10_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_10_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_10_subcomp_networkIF.addLink(link_id_0000000a, "rtr_port", "20 ns")

comp_empty_node_11 = sst.Component("empty_node_11", "merlin.simple_patterns.empty")
comp_empty_node_11.setCoordinates(0, 0, 0)
comp_empty_node_11_subcomp_networkIF = comp_empty_node_11.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_11_subcomp_networkIF.addParams({
     "logical_nid" : "9"
})
comp_empty_node_11_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_11_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_11_subcomp_networkIF.addLink(link_id_0000000b, "rtr_port", "20 ns")

comp_empty_node_12 = sst.Component("empty_node_12", "merlin.simple_patterns.empty")
comp_empty_node_12.setCoordinates(0, 0, 0)
comp_empty_node_12_subcomp_networkIF = comp_empty_node_12.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_12_subcomp_networkIF.addParams({
     "logical_nid" : "10"
})
comp_empty_node_12_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_12_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_12_subcomp_networkIF.addLink(link_id_0000000c, "rtr_port", "20 ns")

comp_empty_node_13 = sst.Component("empty_node_13", "merlin.simple_patterns.empty")
comp_empty_node_13.setCoordinates(0, 0, 0)
comp_empty_node_13_subcomp_networkIF = comp_empty_node_13.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_13_subcomp_networkIF.addParams({
     "logical_nid" : "11"
})
comp_empty_node_13_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_13_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_13_subcomp_networkIF.addLink(link_id_0000000d, "rtr_port", "20 ns")

comp_empty_node_14 = sst.Component("empty_node_14", "merlin.simple_patterns.empty")
comp_empty_node_14.setCoordinates(0, 0, 0)
comp_empty_node_14_subcomp_networkIF = comp_empty_node_14.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_14_subcomp_networkIF.addParams({
     "logical_nid" : "12"
})
comp_empty_node_14_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_14_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_14_subcomp_networkIF.addLink(link_id_0000000e, "rtr_port", "20 ns")

comp_empty_node_15 = sst.Component("empty_node_15", "merlin.simple_patterns.empty")
comp_empty_node_15.setCoordinates(0, 0, 0)
comp_empty_node_15_subcomp_networkIF = comp_empty_node_15.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_15_subcomp_networkIF.addParams({
     "logical_nid" : "13"
})
comp_empty_node_15_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_15_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_15_subcomp_networkIF.addLink(link_id_0000000f, "rtr_port", "20 ns")

comp_empty_node_16 = sst.Component("empty_node_16", "merlin.simple_patterns.empty")
comp_empty_node_16.setCoordinates(0, 0, 0)
comp_empty_node_16_subcomp_networkIF = comp_empty_node_16.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_16_subcomp_networkIF.addParams({
     "logical_nid" : "14"
})
comp_empty_node_16_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_16_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_16_subcomp_networkIF.addLink(link_id_00000010, "rtr_port", "20 ns")

comp_empty_node_17 = sst.Component("empty_node_17", "merlin.simple_patterns.empty")
comp_empty_node_17.setCoordinates(0, 0, 0)
comp_empty_node_17_subcomp_networkIF = comp_empty_node_17.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_17_subcomp_networkIF.addParams({
     "logical_nid" : "15"
})
comp_empty_node_17_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_17_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_17_subcomp_networkIF.addLink(link_id_00000011, "rtr_port", "20 ns")

comp_empty_node_18 = sst.Component("empty_node_18", "merlin.simple_patterns.empty")
comp_empty_node_18.setCoordinates(0, 0, 0)
comp_empty_node_18_subcomp_networkIF = comp_empty_node_18.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_18_subcomp_networkIF.addParams({
     "logical_nid" : "16"
})
comp_empty_node_18_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_18_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_18_subcomp_networkIF.addLink(link_id_00000012, "rtr_port", "20 ns")

comp_empty_node_19 = sst.Component("empty_node_19", "merlin.simple_patterns.empty")
comp_empty_node_19.setCoordinates(0, 0, 0)
comp_empty_node_19_subcomp_networkIF = comp_empty_node_19.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_19_subcomp_networkIF.addParams({
     "logical_nid" : "17"
})
comp_empty_node_19_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_19_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_19_subcomp_networkIF.addLink(link_id_00000013, "rtr_port", "20 ns")

comp_empty_node_20 = sst.Component("empty_node_20", "merlin.simple_patterns.empty")
comp_empty_node_20.setCoordinates(0, 0, 0)
comp_empty_node_20_subcomp_networkIF = comp_empty_node_20.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_20_subcomp_networkIF.addParams({
     "logical_nid" : "18"
})
comp_empty_node_20_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_20_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_20_subcomp_networkIF.addLink(link_id_00000014, "rtr_port", "20 ns")

comp_empty_node_21 = sst.Component("empty_node_21", "merlin.simple_patterns.empty")
comp_empty_node_21.setCoordinates(0, 0, 0)
comp_empty_node_21_subcomp_networkIF = comp_empty_node_21.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_21_subcomp_networkIF.addParams({
     "logical_nid" : "19"
})
comp_empty_node_21_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_21_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_21_subcomp_networkIF.addLink(link_id_00000015, "rtr_port", "20 ns")

comp_empty_node_22 = sst.Component("empty_node_22", "merlin.simple_patterns.empty")
comp_empty_node_22.setCoordinates(0, 0, 0)
comp_empty_node_22_subcomp_networkIF = comp_empty_node_22.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_22_subcomp_networkIF.addParams({
     "logical_nid" : "20"
})
comp_empty_node_22_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_22_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_22_subcomp_networkIF.addLink(link_id_00000016, "rtr_port", "20 ns")

comp_empty_node_23 = sst.Component("empty_node_23", "merlin.simple_patterns.empty")
comp_empty_node_23.setCoordinates(0, 0, 0)
comp_empty_node_23_subcomp_networkIF = comp_empty_node_23.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_23_subcomp_networkIF.addParams({
     "logical_nid" : "21"
})
comp_empty_node_23_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_23_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_23_subcomp_networkIF.addLink(link_id_00000017, "rtr_port", "20 ns")

comp_empty_node_24 = sst.Component("empty_node_24", "merlin.simple_patterns.empty")
comp_empty_node_24.setCoordinates(0, 0, 0)
comp_empty_node_24_subcomp_networkIF = comp_empty_node_24.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_24_subcomp_networkIF.addParams({
     "logical_nid" : "22"
})
comp_empty_node_24_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_24_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_24_subcomp_networkIF.addLink(link_id_00000018, "rtr_port", "20 ns")

comp_empty_node_25 = sst.Component("empty_node_25", "merlin.simple_patterns.empty")
comp_empty_node_25.setCoordinates(0, 0, 0)
comp_empty_node_25_subcomp_networkIF = comp_empty_node_25.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_25_subcomp_networkIF.addParams({
     "logical_nid" : "23"
})
comp_empty_node_25_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_25_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_25_subcomp_networkIF.addLink(link_id_00000019, "rtr_port", "20 ns")

comp_empty_node_26 = sst.Component("empty_node_26", "merlin.simple_patterns.empty")
comp_empty_node_26.setCoordinates(0, 0, 0)
comp_empty_node_26_subcomp_networkIF = comp_empty_node_26.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_26_subcomp_networkIF.addParams({
     "logical_nid" : "24"
})
comp_empty_node_26_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_26_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_26_subcomp_networkIF.addLink(link_id_0000001a, "rtr_port", "20 ns")

comp_empty_node_27 = sst.Component("empty_node_27", "merlin.simple_patterns.empty")
comp_empty_node_27.setCoordinates(0, 0, 0)
comp_empty_node_27_subcomp_networkIF = comp_empty_node_27.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_27_subcomp_networkIF.addParams({
     "logical_nid" : "25"
})
comp_empty_node_27_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_27_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_27_subcomp_networkIF.addLink(link_id_0000001b, "rtr_port", "20 ns")

comp_empty_node_28 = sst.Component("empty_node_28", "merlin.simple_patterns.empty")
comp_empty_node_28.setCoordinates(0, 0, 0)
comp_empty_node_28_subcomp_networkIF = comp_empty_node_28.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_28_subcomp_networkIF.addParams({
     "logical_nid" : "26"
})
comp_empty_node_28_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_28_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_28_subcomp_networkIF.addLink(link_id_0000001c, "rtr_port", "20 ns")

comp_empty_node_29 = sst.Component("empty_node_29", "merlin.simple_patterns.empty")
comp_empty_node_29.setCoordinates(0, 0, 0)
comp_empty_node_29_subcomp_networkIF = comp_empty_node_29.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_29_subcomp_networkIF.addParams({
     "logical_nid" : "27"
})
comp_empty_node_29_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_29_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_29_subcomp_networkIF.addLink(link_id_0000001d, "rtr_port", "20 ns")

comp_empty_node_30 = sst.Component("empty_node_30", "merlin.simple_patterns.empty")
comp_empty_node_30.setCoordinates(0, 0, 0)
comp_empty_node_30_subcomp_networkIF = comp_empty_node_30.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_30_subcomp_networkIF.addParams({
     "logical_nid" : "28"
})
comp_empty_node_30_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_30_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_30_subcomp_networkIF.addLink(link_id_0000001e, "rtr_port", "20 ns")

comp_empty_node_31 = sst.Component("empty_node_31", "merlin.simple_patterns.empty")
comp_empty_node_31.setCoordinates(0, 0, 0)
comp_empty_node_31_subcomp_networkIF = comp_empty_node_31.setSubComponent("networkIF", "merlin.linkcontrol", 0)
comp_empty_node_31_subcomp_networkIF.addParams({
     "logical_nid" : "29"
})
comp_empty_node_31_subcomp_networkIF.addGlobalParamSet("params_LinkControl_9")
comp_empty_node_31_subcomp_networkIF.setCoordinates(0, 0, 0)
comp_empty_node_31_subcomp_networkIF.addLink(link_id_0000001f, "rtr_port", "20 ns")

# Define SST Statistics Options:
sst.setStatisticOutput("sst.statOutputConsole")
# End of generated output.

